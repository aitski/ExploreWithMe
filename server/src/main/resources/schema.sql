CREATE TABLE IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name    VARCHAR                                             NOT NULL,
    email   VARCHAR                                             NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name        VARCHAR                                             NOT NULL,
    CONSTRAINT UQ_CAT UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations
(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    lat         FLOAT,
    lon         FLOAT
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    pinned         BOOLEAN,
    title          VARCHAR
);

CREATE TABLE IF NOT EXISTS events
(
    event_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    annotation         VARCHAR,
    category_id        BIGINT,
    confirmed_requests BIGINT,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    description        VARCHAR,
    event_date         TIMESTAMP WITHOUT TIME ZONE,
    initiator          BIGINT,
    location_id        BIGINT,
    paid               BOOLEAN,
    participant_limit  BIGINT,
    published_On       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state              VARCHAR,
    title              VARCHAR,
    views              BIGINT,
    CONSTRAINT fk_user FOREIGN KEY (initiator) REFERENCES users (user_id),
    CONSTRAINT fk_categories FOREIGN KEY (category_id) REFERENCES categories (category_id),
    CONSTRAINT fk_location FOREIGN KEY (location_id) REFERENCES locations (location_id)
);

CREATE TABLE IF NOT EXISTS comp_events
(
    comp_id_event BIGINT NOT NULL,
    event_id_comp BIGINT NOT NULL,

    CONSTRAINT fk_comp FOREIGN KEY (comp_id_event) REFERENCES compilations (compilation_id),
    CONSTRAINT fk_event FOREIGN KEY (event_id_comp) REFERENCES events (event_id)
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    created    TIMESTAMP WITHOUT TIME ZONE,
    event      BIGINT,
    requester  BIGINT,
    status     VARCHAR,
    CONSTRAINT fk_requester FOREIGN KEY (requester) REFERENCES users (user_id),
    CONSTRAINT fk_event FOREIGN KEY (event) REFERENCES events (event_id)
);

